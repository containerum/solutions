// Code generated by fileb0x at "2018-05-03 17:00:01.321865706 +0300 MSK m=+0.020947180" from config file "b0x.yaml" DO NOT EDIT.
// modification hash(e24453cdf3d72342328c1cd803e43f56.49450a80efb1bf0fbe784dcff4d0855b)

package static

import (
	"bytes"
	"compress/gzip"
	"io"
	"net/http"
	"os"
	"path"

	"context"
	"golang.org/x/net/webdav"
)

var (
	// CTX is a context for webdav vfs
	CTX = context.Background()

	// FS is a virtual memory file system
	FS = webdav.NewMemFS()

	// Handler is used to server files through a http handler
	Handler *webdav.Handler

	// HTTP is the http file system
	HTTP http.FileSystem = new(HTTPFS)
)

// HTTPFS implements http.FileSystem
type HTTPFS struct{}

// FileSwaggerJSON is "swagger.json"
var FileSwaggerJSON = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xec\x5b\x4f\x6f\xdb\x3a\x12\xbf\xe7\x53\x10\xda\x05\x72\xd8\xd8\xea\x16\x8b\x3d\xf4\x96\x57\xa7\xad\xd1\xb4\x08\x9c\xe6\xd4\x14\x05\x2d\x8e\x65\x36\x12\xa9\x90\x94\x9b\x34\xc8\x77\x7f\xa0\xfe\x52\x12\xe5\x48\x72\x6d\x27\x7d\x3e\x45\x96\x86\x33\xe4\xcc\xef\xc7\xe1\x90\xcc\xc3\x11\x42\x8e\xfc\x89\x7d\x1f\x84\xf3\x06\x39\xaf\xc7\xaf\x9c\x13\xfd\x2e\xc2\x6a\x29\x9d\x37\x48\x0b\x20\xe4\xb8\x92\x07\xb1\xa2\x9c\x95\xef\x10\x72\x7c\x50\xc6\x4f\x84\x1c\x85\x7d\x2d\xf0\xb5\x78\x83\x90\x73\xba\xc2\x34\xc0\xf3\x00\x2e\x0b\x15\xc5\xe7\x6f\x27\x65\x5b\x19\x87\x21\x16\xf7\xba\x17\xef\x41\x21\x9c\x37\x43\x85\x69\x14\x50\xa9\xc6\x8e\xd1\x86\x47\x20\xb0\xfe\x36\x25\x59\xbb\xc2\xc8\x39\x95\xca\x14\x8d\xb0\xc0\x21\x28\x10\xf5\x0e\x3e\x18\xcf\x08\x39\xff\x16\xb0\xd0\xba\xfe\xe5\x96\x2d\xdc\x2b\x09\x62\xc6\x03\xf8\x00\x98\x80\x70\x8c\x16\x8f\x27\x03\x54\x4d\x27\x16\x45\x56\xa7\x08\x90\x11\x67\x12\x64\xc5\xcf\x08\x39\xaf\x5f\xbd\xaa\xbd\x42\xc8\x21\x20\x3d\x41\x23\x3d\x7e\x6d\xd7\xe2\x42\xe7\xa4\xda\x42\x7a\x4b\x08\x71\x43\x53\xa5\xf3\x04\x16\x94\xd1\xa4\xb9\xdb\x0c\x66\xe2\xe7\x4a\xe3\xc7\x36\xf7\x38\x04\x16\x38\x0e\x54\xb3\xe3\xa5\xb1\x62\xc0\x2e\x08\xc1\x5b\x3c\x64\x68\x75\xee\x46\x21\xa8\x25\x27\xa3\x15\x95\x74\x4e\x03\xaa\x12\x08\x45\xf1\x3c\xa0\x5e\xde\xbc\x68\xe0\x44\x5c\x6e\x07\xb3\xa7\x84\x58\x30\xbb\x0e\xad\xa7\x84\x34\xec\xbc\x28\xc4\xae\x51\xc4\x70\x08\x5a\xd1\x9c\x93\xfb\x3a\xe6\x28\x6b\xfb\xb2\x31\x1a\xd7\x00\xb1\x2f\xbd\xfe\xfb\x24\xbd\xf2\x18\x23\x4c\x08\x10\xe7\x19\xa2\xfe\xc8\x68\x66\x4c\xe1\xee\x43\xfe\xf8\x68\xce\xe6\x51\xbc\x1d\x66\x5c\x45\x04\x2b\xe8\x49\x8e\xb4\xd1\x1f\xcb\x0f\x75\x1f\x25\xfc\x90\x4a\x50\xe6\xd7\x79\x90\xb3\x47\x36\x47\x6d\x30\x48\xa7\xe8\xfa\x17\x01\xb7\x31\x15\xa0\x5d\xa8\x44\x0c\xff\x18\xb6\xbe\xee\xce\xd6\x38\x41\xd6\xb3\xe4\x6b\x91\xa5\x08\x04\xa0\x60\x2b\x6c\x9c\x24\xaa\x7b\xb2\x31\x6d\x74\x60\xe3\xef\x63\xe3\x16\x01\x9e\x82\xe7\x85\x26\x24\x17\xd8\x6a\x7f\x25\x06\x02\xb6\xa2\x82\xb3\x10\x98\x42\x2b\x2c\xa8\xfe\x2a\x3b\x96\x1c\x67\x6c\x75\x20\xc4\xce\x08\x31\xa4\xfc\xd1\xe1\xdd\xb8\x04\x32\xc3\xfd\xec\xeb\x9e\x0e\x84\x13\x20\x79\x2c\x3c\xd8\x63\x65\x8f\x8a\x3e\x74\xa4\xda\xac\xe8\xf3\x81\x70\xcf\x9a\x70\xc2\x12\xa8\x8d\x58\x57\x46\xfe\x85\x71\x2f\x96\x20\xbe\x0f\xdf\x45\xd3\xa0\xea\x47\x33\x11\x33\x46\x99\xdf\x6f\xfb\xac\x62\xe6\xb0\x85\xe6\xd8\x9d\xb8\x29\x98\x9b\x5e\xfe\xd3\x36\xd0\xfa\xc1\x75\x16\xb3\x4e\x65\xc8\x2c\x66\x87\x8d\xb2\x4d\x01\xb7\x9f\xaa\xdb\x13\x90\x54\xdd\x1b\x0e\xc4\x40\xc0\x2c\xe9\x97\x07\x2f\x3b\x11\xb4\xec\xc5\x75\xdd\x00\xe8\xc7\xb3\xac\xf6\xef\x5e\xf1\x1f\x0a\xfd\x43\xa1\xbf\x4d\xc8\xbb\x04\xa2\x80\xdf\xeb\x72\x7b\x17\x4b\x22\xc3\x73\x85\xd9\x3e\x0b\xa2\x89\xd1\xdb\x03\x23\x9e\x4f\xe1\x61\x8b\xeb\xa6\x99\xc6\x88\xf5\xcb\x58\xa1\x75\xa5\x9c\x04\xb1\xa2\x43\xca\xfd\x0d\xf8\x96\xdb\xec\x43\xb6\xcb\xbc\x9f\x07\xa6\x3d\x3f\xa6\xc9\x22\xa4\x1b\x17\xf6\x99\x9e\x97\x44\xb2\xa3\xac\xa9\x63\x0c\xa4\xbc\x2b\xd3\x3c\x26\xa9\x2c\xec\x2a\xfe\x6c\xc8\xa2\xd1\xa8\xa4\xcd\xcf\x25\xf5\x96\x48\x53\x19\x79\x98\xe9\x8a\xbe\xf0\x76\x01\x27\x3e\xff\x01\x5e\x59\x91\x3a\x91\xd0\xbc\x52\xb4\x16\x5f\x87\x86\xd8\x6f\xc6\x3c\xd7\x82\x85\xc0\xd5\x2a\xc3\xa1\x0a\x42\xd9\x74\x71\x0d\xc6\xad\x31\xba\x1b\xf9\x7c\x94\xa3\x7a\x9a\x1a\xb7\x3a\x3e\xa0\x21\x55\x8d\x8e\xd9\xc1\x72\x9e\xca\x5a\xf5\x64\xb6\xac\xc3\xb3\x70\xae\xda\xc1\xcf\xfa\xaf\x55\x6d\x2c\x82\xc1\x5a\xaf\x66\xe7\x86\xd2\x46\x29\x9d\xc8\x46\xd8\xbb\xc1\x7e\x22\xee\x53\x35\xf6\x38\x53\x98\x32\x10\x71\x38\x66\xa0\x5c\x6f\x69\xec\xda\x46\x37\xbe\x1b\x72\x02\x41\xe6\x82\x7c\xb6\x6f\xb9\x95\xd3\x03\x76\x49\x03\x8d\xbd\x40\xff\xe5\x0b\xb4\xee\xee\x50\x6f\xec\xd9\xb6\xbd\x06\xc2\x6f\xc0\xd1\xf2\x1a\x5c\x5a\xd2\xd9\x16\xc3\x54\x5f\x52\xb4\xc7\xa7\x26\x69\x06\xc6\xb6\xc4\xe9\x1d\x10\xfb\xb2\x7b\xc3\x19\x21\x33\xde\xcd\xf3\xe6\x52\x7a\x17\xbe\x3f\x13\x62\x8d\xbf\xcf\x84\x48\x26\x5e\x85\x19\xc1\x82\xe8\xe4\x46\x71\x40\x7f\x25\x04\x38\xbd\x98\xa2\x24\x89\x5c\xb3\x4f\x20\x25\xf6\x41\xcb\x7a\x9c\x69\x71\x95\x7e\x42\x61\xfa\xe5\xcd\x35\xfb\x0f\xba\x76\x28\x5b\xe1\x80\x92\x64\xea\xd6\x23\xbe\x76\xd2\xf7\xb7\x31\x57\x18\xc1\x9d\x07\x40\x80\xe4\x6f\x13\x59\x9c\x1e\x50\x25\x76\x9c\x6b\x36\x1e\x8f\x41\x79\xe3\xf1\xf8\x9a\x4d\x27\xda\x5e\xcc\xe8\x6d\x0c\x99\x35\x4a\x80\x29\xba\xa0\x5e\xda\xca\xe3\x04\xae\xd9\x04\x14\xa6\x81\xd4\xc2\x3c\x19\x19\x0e\x74\x2f\x15\xdc\xd5\x3a\x29\xd1\x0d\x65\x04\xa7\xc6\x17\x14\x02\x82\x8e\x67\x10\x05\xd4\xc3\xf2\x18\x85\xb1\x54\x68\x0e\x88\x71\x36\xfa\x05\x82\xa3\x15\x0e\xe2\x62\x04\x8c\x2b\x04\x8c\xc7\xfe\x12\x29\xea\x2f\x95\x44\x8a\xa3\x05\x00\x41\x3e\x8f\x96\x20\x72\xb9\x7c\xe3\x1f\x1d\xbf\xe7\xe4\x18\x11\x0e\xf2\x58\x21\xb8\xa3\x52\x69\x91\x77\xda\x6a\xb5\xab\x12\x12\x7c\xdf\xc0\xfd\x28\xb1\x88\x22\x4c\xc5\x46\x18\x4f\xdc\xb1\xa7\x8c\x97\x05\xc3\x9e\x53\x12\x9f\x77\x4c\x79\xa9\xa7\xec\x7a\x28\xe9\xa6\xe3\x4c\x88\xe9\xc4\xae\x22\x83\xc4\xe0\x14\x97\x31\xc2\xae\x5c\x2a\xac\x62\xf9\x7d\xa9\x54\xd4\x66\x80\x32\x05\x3e\x88\xaa\x85\x05\x17\x21\x56\xd9\xe7\xff\xff\x6f\x8d\xf9\xcb\xc4\xc2\x87\x2f\x5f\x2e\x7e\xeb\x2c\xb2\x02\x46\xb8\x70\x7d\xaa\x96\xf1\x7c\xec\xf1\xd0\x35\xc4\x5d\x6f\x09\x42\xdc\x37\xe6\x97\xe9\x64\xfd\x0c\x93\xf2\x58\x40\x24\x40\xea\x79\xaf\x4a\xe9\xe9\x64\x38\xd4\x35\x9d\x3b\x23\xe1\xa3\x16\xb6\x87\xab\x07\x9e\x2e\x2b\x80\xda\x93\xc7\x3f\x56\xc7\x6d\xf1\xb9\x96\xa8\x79\x5d\x3b\x4b\x4f\x34\x69\x5d\xd0\xf0\x79\x1d\x90\x06\x18\xe3\x2a\x1a\x77\x34\xc8\xcb\xa7\x70\x75\xd9\x00\x56\x56\x9b\xa1\xe9\x64\xcd\x40\x6b\xd4\xde\xc5\x68\xde\xd5\xe7\xbd\xfa\x68\xca\xb4\x60\x8c\x06\x13\x42\xb3\x1c\x51\x26\x87\x74\x0a\x5d\x33\xbc\x3a\x77\x4a\x2d\x17\x2d\x2c\xb2\xcf\xf3\x3b\xc5\xf4\x79\xbd\x16\xaa\x3b\x28\x15\xa8\x14\x89\xc5\x11\x3b\xca\x2a\xa9\xc1\xd3\x88\x17\xc5\x83\xf3\xc0\xdb\x8b\x2b\xfb\xa4\x22\x70\x38\x58\xe9\xec\xf4\xd3\x4e\x16\x87\xb6\x53\xa5\xf6\x18\x58\xa4\x53\xc4\x66\xcf\x8a\xeb\x4a\xdd\x0c\xd0\x6d\x0c\xc6\xa1\x71\xff\xb8\x64\x67\x67\xdb\x49\xa1\x6f\x33\xed\xd6\xe8\x25\xe4\xda\xd7\x1a\xea\x2c\x35\x6e\xaf\xf6\xb9\xfa\xbe\x5d\xbf\x7c\xe6\xaa\xe9\x9a\xed\x61\xb0\xb2\x0f\xd6\x0e\x3e\x53\xcc\x2c\x0b\x1b\xdb\x71\xfd\x8b\xf4\xe6\xbe\xf0\x2e\x0b\xc2\x62\xbb\x77\x27\xce\x36\xee\xf0\xad\xf1\x75\x29\x55\x99\x71\xad\x97\x44\x87\x3b\xbe\x7a\xe3\x75\xa7\x04\x33\xaf\x30\xee\xc0\xdd\x33\xdb\x55\xc3\x16\xa7\x17\xb2\x15\x94\xb7\xdf\x2b\xeb\xed\x76\xdb\xbd\xc7\x75\x8a\xba\xad\x22\x9e\x9c\x81\x2c\x73\x50\xb7\x60\x59\x6e\xbe\x6d\x31\x64\x95\x1b\x23\xed\xd1\x32\xc5\x92\x24\x58\xbb\x2f\xf5\x74\x78\x8c\xe3\x8b\xaf\xc6\x5a\x0c\xc2\x28\xc0\x0a\x9c\xfa\x06\x6f\xed\xb7\x8c\x70\x79\x03\xe4\xdb\x93\x31\x9f\x0b\xcc\xbc\xe5\xe0\xf5\xc8\x5f\x69\x73\x7b\xa6\x6c\x67\xf1\xe6\x40\xda\x80\xd5\xdb\xdf\x21\x2f\xe3\xb0\x89\xee\x4a\x24\xab\x06\x0a\x30\x0c\xd5\xff\x25\x57\xb0\x6b\xe6\x3c\x95\xcd\x1b\xb2\xe6\x64\xd7\x9f\x4b\x7b\xdb\x7f\x6f\xbb\x5f\xb6\xff\xad\xf7\xe2\xa8\xae\x72\x74\xfc\x50\x86\xaa\x38\xc6\x35\xa2\x94\x0f\x72\x7d\x01\x17\x2b\x1a\x48\x77\xa9\x54\xa4\x9f\xdc\xec\xbf\xe8\xc7\x3f\x24\x67\x4f\x1c\x16\x9b\x50\x31\x4e\xa4\xb7\xda\x83\xfa\xc9\x77\xe9\x99\xe6\x81\x70\xba\xec\x5f\x83\xdb\xb4\x76\xad\x97\xde\x96\xa3\xdf\x8e\x03\x49\xf5\xd5\x06\x50\xdb\x71\xb2\x9c\xc1\x1e\x3d\xfe\x1d\x00\x00\xff\xff\x33\x06\x45\x36\xc0\x40\x00\x00")

// FileVendorGithubComContainerumCherrySwaggerJSON is "vendor/github.com/containerum/cherry/swagger.json"
var FileVendorGithubComContainerumCherrySwaggerJSON = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xac\x54\x41\x6f\xdb\x3c\x0c\xbd\xe7\x57\x10\xfe\x3e\x20\x87\x2d\xce\x30\x0c\x3b\xf4\x36\x20\xed\x16\x14\x03\x8a\xa5\x47\x03\x83\x62\xd1\x36\x57\x5b\x72\x29\xba\x4b\x5a\xf4\xbf\x0f\xb2\xdc\xc6\x76\x93\xac\x5b\x76\xf0\xc1\xd4\x23\xf9\x48\x3e\xf2\x61\x02\x10\xb9\x9f\x2a\xcf\x91\xa3\x33\x88\xde\xc7\xef\xa2\xb7\xde\x56\x2b\x29\x5c\x74\x06\x0f\x8f\xed\xaf\xc6\x8c\x0c\x09\x59\xd3\x1a\x27\x00\x00\xd1\x39\xf3\xf3\x4f\x8b\x71\x29\x53\xed\x41\x3e\xd4\x39\x33\xcc\x66\xe0\x44\x19\xad\x58\x83\x43\x26\x55\xd2\xbd\x5a\x97\x08\x9f\xae\x96\x80\xcc\x96\x13\xf3\x15\x9d\x53\x39\x7a\x6c\x6a\x8d\x87\x4b\x78\x82\x2a\xbc\x9c\x25\xe6\x0d\x24\x11\x99\x3b\x55\x92\x86\xc6\x21\x1b\x55\x61\x12\x05\xfb\x6d\x63\x45\x01\x6e\x52\x44\x8d\xfa\xc9\xda\x62\x95\xe7\xd2\xe5\x89\x12\x13\xc7\x31\x4a\x1a\xc7\x71\x62\x96\x0b\x9f\xaf\x31\x74\xdb\x60\x97\x8d\x34\x1a\xa1\x8c\xd2\xe0\x95\x5a\x8d\x89\x59\xa0\x28\x2a\x9d\x07\xdb\xb6\x32\x55\x7a\x96\x82\x9b\x11\x49\x07\x37\x64\xb4\x0a\xc9\x33\xc2\x52\xc3\xf4\x1b\xd6\x25\xa5\xca\x4d\xa1\x6a\x9c\xc0\x1a\xc1\x58\x33\xbb\x47\xb6\x70\xa7\xca\xe6\xb9\x02\x63\x05\xd0\xd8\x26\x2f\x40\x28\x2f\xc4\x81\x58\xc8\x10\x35\xe4\xb6\x2e\x90\x9f\x70\x8c\xce\x36\x9c\x22\x4c\x3f\x5b\x3d\x05\x6d\xd1\x4d\x05\x70\x43\x4e\x3c\xe4\xc2\x67\x1d\x52\x75\x28\x60\x33\xb8\xc1\xed\xac\xcd\x08\xb5\x22\x76\xed\x84\xdb\x91\xc9\xb6\x46\x3f\x2b\xbb\xfe\x81\xa9\xec\xec\x35\xdb\x1a\x59\x08\x5d\x6f\xc0\xed\x88\xdb\x76\x0c\x8c\xbd\x30\x8a\x59\x6d\x9f\xa3\xb4\x4f\x24\x58\x8d\xf1\x3d\x0f\x27\x4c\x26\x8f\x7a\x8f\x8f\x03\xf7\xcd\x2c\xb7\x33\x3f\x6d\x0f\xee\x86\xb1\x43\xf7\xb0\xa1\xe7\x2f\x98\xfd\xcf\x98\x79\xd7\xff\xe6\x3d\x05\xcf\x43\xa7\xf6\xc7\x21\xfd\xba\x18\xe7\xcc\xcb\xc5\xfe\x10\x9d\x24\x0e\x75\xa9\xab\xf9\x70\x9d\xdd\x46\xec\x0f\xee\x44\x49\xe3\xbe\x17\x22\xf5\xa1\x04\x64\x04\xfd\x3e\x0f\x32\x64\x96\x2b\x25\xdd\xf3\xc7\x0f\x47\xd2\xaf\xda\x0c\x5f\xae\xaf\xaf\x7a\x0c\x26\x23\x26\xc1\xa5\x56\xe9\x4d\xa8\x34\xca\x49\x8a\x66\x1d\xa7\xb6\x9a\xfb\x05\x51\x64\x90\x9b\x6a\x9e\x16\xc8\xbc\x0d\x81\x3a\xe7\x28\xb4\xee\xe8\xe5\x08\xfb\xc9\x58\x33\x3a\x34\xe2\x86\xab\xba\x5c\xfc\xbd\x84\xfd\x9a\xbe\x7a\xc2\x97\x1e\xbc\x7f\x0c\x7f\xa0\x93\xd5\x40\x28\xff\xb8\x93\x97\xc3\x7a\xf6\xf4\xd2\x23\x46\xdd\xf4\x4d\xf0\x87\xa1\x6d\xe7\xcb\x5e\x8e\x05\xd4\x13\x4f\x33\x54\xcf\x89\xe4\x57\xbf\xd3\xc1\xea\x85\x10\x1c\xf2\x1d\xa5\x08\xcb\xc5\x91\x02\x46\x2b\x76\x0a\xcb\x8b\xf1\x5d\x19\xb3\xdc\x9d\xdd\x1e\x4b\xa5\x35\x75\x37\x78\x77\x7c\xc3\x89\x3a\x42\x7b\xac\xe1\x5d\x94\xab\x03\x6a\xde\x7f\x47\x4f\xd3\xd6\xc4\x7f\x8f\xbf\x02\x00\x00\xff\xff\x85\xa0\x34\xb4\x1a\x08\x00\x00")

// FileVendorGithubComContainerumUtilsHttputilSwaggerJSON is "vendor/github.com/containerum/utils/httputil/swagger.json"
var FileVendorGithubComContainerumUtilsHttputilSwaggerJSON = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xbc\x95\xcf\x6a\xe3\x30\x10\xc6\xef\x79\x8a\x41\xe7\xf5\xb2\xb0\x37\xdf\x96\xf5\x21\xbe\x2c\x21\x9b\x96\x42\xe9\x61\x62\x8f\x6d\x51\x5b\x72\xf4\x87\x10\x4a\xde\xbd\x48\x72\x9d\x86\x94\xc8\x4d\x71\x0f\x21\x68\xe6\xf3\xcc\x4f\x9f\xc6\xf2\xcb\x02\x80\xe9\x3d\xd6\x35\x29\x96\x02\xfb\xfd\xf3\x17\xfb\xe1\x62\x3d\x2a\xec\xc8\x90\xd2\x2c\x05\xa7\x02\x60\xff\xed\x56\x1b\x6e\xac\xa1\xf2\x4e\x93\xca\xb3\x31\x05\xc0\x04\x76\xe4\x2a\x58\x4d\x2a\xe1\xa5\xaf\xe2\x13\x5c\xb8\xf0\xce\x92\x3a\x9c\x82\x8a\x76\x96\x2b\x2a\x59\x0a\x15\xb6\x9a\xc6\x84\x39\xf4\xbe\x8c\x36\x8a\x8b\xfa\xf4\x40\x25\x55\x87\xc6\x37\xb0\xef\xab\x97\xa4\x0b\xc5\x7b\xc3\xa5\x6f\xb3\x69\x08\xf2\x0c\x64\x05\xa6\xa1\xb7\x3f\x87\x04\x52\xc0\x96\x1a\x6c\x2b\x17\xdd\x37\xbc\x68\x7c\x0e\xcb\x8e\x0b\xae\x8d\x42\x23\x15\x14\x28\xa0\x27\xe5\x9a\x85\x6c\xe1\x0b\xfb\x66\xc7\xd0\x93\xad\x69\x67\x49\x9b\x3c\x5b\x12\x96\xde\xb5\x0b\x0f\x1e\x92\x41\x94\xe4\x19\xbb\x79\x6b\xc1\xb8\x26\x74\xf9\xc8\x39\xa3\x2c\x9d\xa1\x85\x53\xb9\xc6\xe5\x14\xdf\x0c\x35\x58\xf1\x0f\x3b\x9a\xe2\x98\xd3\xc5\xf1\x6e\xf3\xe6\x6f\xcb\x49\x98\xa8\x3f\x41\x36\x17\xc4\x9f\x7a\x0a\x83\x57\xcd\x81\x10\x36\x97\xaf\xae\x11\x04\x4d\x92\xaf\x6e\x05\x38\x4d\x0f\xef\xa7\x61\x6d\xe4\x33\x89\xeb\xb3\xeb\x25\x93\x86\x37\x06\x75\x3e\xd2\xb1\x03\x5b\xcb\x96\xa2\xe7\xe5\x44\x71\x30\x12\xb6\x63\x29\x3c\x0e\x6b\x08\xd7\xe5\x98\x07\x60\xfe\x3e\x62\xc3\xfa\xe9\x8b\xa3\xe6\xde\x25\xdd\x63\x41\x3a\xca\x3f\x4a\xe7\x1a\xfb\x7b\xd9\xda\x6e\x02\x48\xd0\xcd\x45\xb1\xe4\x25\x65\x68\x30\x8a\xe1\x84\x89\x53\x5e\x92\x6c\xa5\x6c\x09\xc5\x27\x50\xfc\x27\x2e\xb0\x2c\xdc\xef\xf8\x1a\x00\x00\xff\xff\xce\xd4\x03\x4a\x77\x07\x00\x00")

func init() {
	if CTX.Err() != nil {
		panic(CTX.Err())
	}

	var err error

	err = FS.Mkdir(CTX, "vendor/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	err = FS.Mkdir(CTX, "vendor/github.com/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	err = FS.Mkdir(CTX, "vendor/github.com/containerum/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	err = FS.Mkdir(CTX, "vendor/github.com/containerum/cherry/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	err = FS.Mkdir(CTX, "vendor/github.com/containerum/utils/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	err = FS.Mkdir(CTX, "vendor/github.com/containerum/utils/httputil/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	var f webdav.File

	var rb *bytes.Reader
	var r *gzip.Reader

	rb = bytes.NewReader(FileSwaggerJSON)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "swagger.json", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileVendorGithubComContainerumCherrySwaggerJSON)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "vendor/github.com/containerum/cherry/swagger.json", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileVendorGithubComContainerumUtilsHttputilSwaggerJSON)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "vendor/github.com/containerum/utils/httputil/swagger.json", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	Handler = &webdav.Handler{
		FileSystem: FS,
		LockSystem: webdav.NewMemLS(),
	}

}

// Open a file
func (hfs *HTTPFS) Open(path string) (http.File, error) {

	f, err := FS.OpenFile(CTX, path, os.O_RDONLY, 0644)
	if err != nil {
		return nil, err
	}

	return f, nil
}

// ReadFile is adapTed from ioutil
func ReadFile(path string) ([]byte, error) {
	f, err := FS.OpenFile(CTX, path, os.O_RDONLY, 0644)
	if err != nil {
		return nil, err
	}

	buf := bytes.NewBuffer(make([]byte, 0, bytes.MinRead))

	// If the buffer overflows, we will get bytes.ErrTooLarge.
	// Return that as an error. Any other panic remains.
	defer func() {
		e := recover()
		if e == nil {
			return
		}
		if panicErr, ok := e.(error); ok && panicErr == bytes.ErrTooLarge {
			err = panicErr
		} else {
			panic(e)
		}
	}()
	_, err = buf.ReadFrom(f)
	return buf.Bytes(), err
}

// WriteFile is adapTed from ioutil
func WriteFile(filename string, data []byte, perm os.FileMode) error {
	f, err := FS.OpenFile(CTX, filename, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, perm)
	if err != nil {
		return err
	}
	n, err := f.Write(data)
	if err == nil && n < len(data) {
		err = io.ErrShortWrite
	}
	if err1 := f.Close(); err == nil {
		err = err1
	}
	return err
}

// WalkDirs looks for files in the given dir and returns a list of files in it
// usage for all files in the b0x: WalkDirs("", false)
func WalkDirs(name string, includeDirsInList bool, files ...string) ([]string, error) {
	f, err := FS.OpenFile(CTX, name, os.O_RDONLY, 0)
	if err != nil {
		return nil, err
	}

	fileInfos, err := f.Readdir(0)
	if err != nil {
		return nil, err
	}

	err = f.Close()
	if err != nil {
		return nil, err
	}

	for _, info := range fileInfos {
		filename := path.Join(name, info.Name())

		if includeDirsInList || !info.IsDir() {
			files = append(files, filename)
		}

		if info.IsDir() {
			files, err = WalkDirs(filename, includeDirsInList, files...)
			if err != nil {
				return nil, err
			}
		}
	}

	return files, nil
}
