{
  "swagger": "2.0",
  "paths": {
    "/solutions": {
      "get": {
        "tags": [
          "AvailableSolutions"
        ],
        "summary": "Get available solutions list.",
        "operationId": "GetSolutionsList",
        "parameters": [
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/UserIDHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "available solutions",
            "schema": {
              "$ref": "#/definitions/AvailableSolutionsList"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-method-visibility": "public"
      },
      "post": {
        "tags": [
          "AvailableSolutions"
        ],
        "summary": "Add available solution.",
        "operationId": "AddTemplate",
        "parameters": [
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AvailableSolution"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "solution added"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-method-visibility": "public"
      }
    },
    "/solutions/{solution}": {
      "put": {
        "tags": [
          "AvailableSolutions"
        ],
        "summary": "Update available solution.",
        "operationId": "UpdateTemplate",
        "parameters": [
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "type": "string",
            "name": "solution",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AvailableSolution"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "solution updated"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-method-visibility": "public"
      },
      "delete": {
        "tags": [
          "AvailableSolutions"
        ],
        "summary": "Delete available solution.",
        "operationId": "DeleteTemplate",
        "parameters": [
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "type": "string",
            "name": "solution",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "solution deleted"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-method-visibility": "public"
      }
    },
    "/solutions/{solution}/activate": {
      "post": {
        "tags": [
          "AvailableSolutions"
        ],
        "summary": "Update available solution.",
        "operationId": "ActivateTemplate",
        "parameters": [
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "type": "string",
            "name": "solution",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "solution activated"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-method-visibility": "public"
      }
    },
    "/solutions/{solution}/deactivate": {
      "post": {
        "tags": [
          "AvailableSolutions"
        ],
        "summary": "Update available solution.",
        "operationId": "DeactivateTemplate",
        "parameters": [
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "type": "string",
            "name": "solution",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "solution deactivated"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-method-visibility": "public"
      }
    },
    "/solutions/{solution}/env": {
      "get": {
        "tags": [
          "AvailableSolutions"
        ],
        "summary": "Get available solution environment variables.",
        "operationId": "GetTemplatesEnv",
        "parameters": [
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "type": "string",
            "name": "solution",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "available solution envs",
            "schema": {
              "$ref": "#/definitions/SolutionEnv"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-method-visibility": "public"
      }
    },
    "/solutions/{solution}/resources": {
      "get": {
        "tags": [
          "AvailableSolutions"
        ],
        "summary": "Get available solution resources.",
        "operationId": "GetTemplatesResources",
        "parameters": [
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "type": "string",
            "name": "solution",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "available solution resources",
            "schema": {
              "$ref": "#/definitions/SolutionResources"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-method-visibility": "public"
      }
    },
    "/user_solutions": {
      "get": {
        "tags": [
          "UserSolutions"
        ],
        "summary": "Get running solutions list.",
        "operationId": "GetSolutionsList",
        "parameters": [
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/UserIDHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "running solutions list",
            "schema": {
              "$ref": "#/definitions/UserSolutionsList"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-method-visibility": "public"
      },
      "post": {
        "tags": [
          "UserSolutions"
        ],
        "summary": "Run solution.",
        "operationId": "RunSolution",
        "parameters": [
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserSolution"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "solution created",
            "schema": {
              "$ref": "#/definitions/RunSolutionResponce"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-method-visibility": "public"
      }
    },
    "/user_solutions/{solution}": {
      "delete": {
        "tags": [
          "UserSolutions"
        ],
        "summary": "Delete solution.",
        "operationId": "DeleteSolution",
        "parameters": [
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "type": "string",
            "name": "solution",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "solution deleted"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-method-visibility": "public"
      }
    },
    "/user_solutions/{solution}/deployments": {
      "get": {
        "tags": [
          "UserSolutions"
        ],
        "summary": "Get solution deployments.",
        "operationId": "GetSolutionsDeployments",
        "parameters": [
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "type": "string",
            "name": "solution",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "solution deployments",
            "schema": {
              "$ref": "#/definitions/DeploymentsList"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-method-visibility": "public"
      }
    },
    "/user_solutions/{solution}/services": {
      "get": {
        "tags": [
          "UserSolutions"
        ],
        "summary": "Get solution services.",
        "operationId": "GetSolutionsServices",
        "parameters": [
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "type": "string",
            "name": "solution",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "solutions services",
            "schema": {
              "$ref": "#/definitions/ServicesList"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-method-visibility": "public"
      }
    }
  },
  "definitions": {
    "AvailableSolution": {
      "description": "AvailableSolution -- solution which user can run",
      "type": "object",
      "properties": {
        "Active": {
          "type": "boolean"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Images"
        },
        "limits": {
          "$ref": "#/definitions/Limits"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "url": {
          "type": "string",
          "x-go-name": "URL"
        }
      },
      "x-go-package": "git.containerum.net/ch/solutions/pkg/models"
    },
    "AvailableSolutionsList": {
      "description": "AvailableSolutionsList -- list of available solutions",
      "type": "object",
      "properties": {
        "solutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableSolution"
          },
          "x-go-name": "Solutions"
        }
      },
      "x-go-package": "git.containerum.net/ch/solutions/pkg/models"
    },
    "ConfigMap": {
      "description": "ConfigMap -- model for config map",
      "type": "object",
      "required": [
        "name",
        "data"
      ],
      "properties": {
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "data": {
          "description": "key-value data",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Data"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "ConfigMapWithOwner": {
      "description": "ConfigMapWithOwner -- model for config map with owner",
      "type": "object",
      "required": [
        "name",
        "data",
        "owner"
      ],
      "properties": {
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "data": {
          "description": "key-value data",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Data"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "owner": {
          "type": "string",
          "x-go-name": "Owner"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "ConfigMapsList": {
      "description": "ConfigMapsList -- model for config maps list",
      "type": "object",
      "properties": {
        "configmaps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigMapWithOwner"
          },
          "x-go-name": "ConfigMaps"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "Container": {
      "description": "Container -- model for container in deployment",
      "type": "object",
      "required": [
        "image",
        "name",
        "limits"
      ],
      "properties": {
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Commands"
        },
        "config_maps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerVolume"
          },
          "x-go-name": "ConfigMaps"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Env"
          },
          "x-go-name": "Env"
        },
        "image": {
          "type": "string",
          "x-go-name": "Image"
        },
        "limits": {
          "$ref": "#/definitions/Resource"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerPort"
          },
          "x-go-name": "Ports"
        },
        "volume_mounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerVolume"
          },
          "x-go-name": "VolumeMounts"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "ContainerPort": {
      "description": "ContainerPort -- model for port in container",
      "type": "object",
      "required": [
        "name",
        "port",
        "protocol"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Port"
        },
        "protocol": {
          "$ref": "#/definitions/Protocol"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "ContainerVolume": {
      "description": "ContainerVolume -- volume (or config map) mounted in container",
      "type": "object",
      "required": [
        "name",
        "mount_path"
      ],
      "properties": {
        "mode": {
          "type": "string",
          "x-go-name": "Mode"
        },
        "mount_path": {
          "type": "string",
          "x-go-name": "MountPath"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "sub_path": {
          "type": "string",
          "x-go-name": "SubPath"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "Deployment": {
      "description": "Deployment -- model for deployments",
      "type": "object",
      "required": [
        "containers",
        "name",
        "replicas"
      ],
      "properties": {
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          },
          "x-go-name": "Containers"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "replicas": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Replicas"
        },
        "status": {
          "$ref": "#/definitions/DeploymentStatus"
        },
        "total_cpu": {
          "description": "total CPU usage by all containers in this deployment",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "TotalCPU"
        },
        "total_memory": {
          "description": "total RAM usage by all containers in this deployment",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "TotalMemory"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "DeploymentStatus": {
      "description": "DeploymentStatus -- kubernetes status of deployment",
      "type": "object",
      "properties": {
        "available_replicas": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "AvailableReplicas"
        },
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "ready_replicas": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ReadyReplicas"
        },
        "replicas": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Replicas"
        },
        "unavailable_replicas": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "UnavailableReplicas"
        },
        "updated_at": {
          "description": "update date in RFC3339 format",
          "type": "string",
          "x-go-name": "UpdatedAt"
        },
        "updated_replicas": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "UpdatedReplicas"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "DeploymentWithOwner": {
      "description": "DeploymentWithOwner -- model for deployment with owner",
      "type": "object",
      "required": [
        "containers",
        "name",
        "replicas",
        "owner"
      ],
      "properties": {
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          },
          "x-go-name": "Containers"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "owner": {
          "type": "string",
          "x-go-name": "Owner"
        },
        "replicas": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Replicas"
        },
        "status": {
          "$ref": "#/definitions/DeploymentStatus"
        },
        "total_cpu": {
          "description": "total CPU usage by all containers in this deployment",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "TotalCPU"
        },
        "total_memory": {
          "description": "total RAM usage by all containers in this deployment",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "TotalMemory"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "DeploymentsList": {
      "description": "DeploymentsList -- model for deployments list",
      "type": "object",
      "properties": {
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentWithOwner"
          },
          "x-go-name": "Deployments"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "Endpoint": {
      "description": "Endpoint -- model for endpoint",
      "type": "object",
      "required": [
        "name",
        "addresses",
        "ports"
      ],
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Addresses"
        },
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "owner": {
          "type": "string",
          "x-go-name": "Owner"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Port"
          },
          "x-go-name": "Ports"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "EndpointsList": {
      "description": "EndpointsList -- model for endpoints list",
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Endpoint"
          },
          "x-go-name": "Endpoints"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "Env": {
      "description": "Env -- key-value pair of enviroment variables",
      "type": "object",
      "required": [
        "value",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "value": {
          "type": "string",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "Err": {
      "description": "Err -- standard serializable API error\nMessage -- constant error message:\n+ \"invalid username\"\n+ \"quota exceeded\"\n+ \"validation error\"\n...etc...\nID -- unique error identification code\nDetails -- optional context error messages kinda\n+ \"field 'Replicas' must be non-zero value\"\n+ \"not enough tights to feed gopher\"\n+ \"resource 'God' does't exist\"\nFields -- optional set of key-value pairs",
      "type": "object",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Details"
        },
        "fields": {
          "$ref": "#/definitions/Fields"
        },
        "id": {
          "$ref": "#/definitions/ErrID"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "status_http": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "StatusHTTP"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/cherry"
    },
    "ErrID": {
      "description": "ErrID -- represents unique error ID",
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/ErrKind"
        },
        "sid": {
          "$ref": "#/definitions/ErrSID"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/cherry"
    },
    "ErrKind": {
      "description": "ErrKind -- represents kind of error",
      "type": "integer",
      "format": "uint64",
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/cherry"
    },
    "ErrSID": {
      "description": "ErrSID -- represents service ID of error",
      "type": "string",
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/cherry"
    },
    "Fields": {
      "description": "Fields -- represents additional key-value fields of error",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/cherry"
    },
    "Ingress": {
      "description": "Ingress -- model for ingress",
      "type": "object",
      "required": [
        "name",
        "rules"
      ],
      "properties": {
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          },
          "x-go-name": "Rules"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "IngressWithOwner": {
      "description": "IngressWithOwner -- model for ingress with owner",
      "type": "object",
      "required": [
        "name",
        "rules",
        "owner"
      ],
      "properties": {
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "owner": {
          "type": "string",
          "x-go-name": "Owner"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          },
          "x-go-name": "Rules"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "IngressesList": {
      "description": "IngressesList -- model for ingresses list",
      "type": "object",
      "properties": {
        "ingresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressWithOwner"
          },
          "x-go-name": "Ingress"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "Limits": {
      "description": "Limits -- solution resources limits",
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string",
          "x-go-name": "CPU"
        },
        "ram": {
          "type": "string",
          "x-go-name": "RAM"
        }
      },
      "x-go-package": "git.containerum.net/ch/solutions/pkg/models"
    },
    "Namespace": {
      "description": "Namespace -- namespace representation provided by resource-service\nhttps://ch.pages.containerum.net/api-docs/modules/resource-service/index.html#get-namespace",
      "type": "object",
      "required": [
        "resources"
      ],
      "properties": {
        "access": {
          "type": "string",
          "x-go-name": "Access"
        },
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "label": {
          "description": "user-visible label for the namespace",
          "type": "string",
          "x-go-name": "Label"
        },
        "max_ext_service": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "MaxExtService"
        },
        "max_int_service": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "MaxIntService"
        },
        "max_traffic": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "MaxTraffic"
        },
        "resources": {
          "$ref": "#/definitions/Resources"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          },
          "x-go-name": "Volumes"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "NamespaceWithOwner": {
      "description": "NamespaceWithOwner -- model for namespace with owner",
      "type": "object",
      "required": [
        "resources"
      ],
      "properties": {
        "access": {
          "description": "access from X-User-Namespace header",
          "type": "string",
          "x-go-name": "Access"
        },
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "label": {
          "description": "user-visible label for the namespace",
          "type": "string",
          "x-go-name": "Label"
        },
        "max_ext_service": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "MaxExtService"
        },
        "max_int_service": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "MaxIntService"
        },
        "max_traffic": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "MaxTraffic"
        },
        "name": {
          "description": "hosting-internal name",
          "type": "string",
          "x-go-name": "Name"
        },
        "owner": {
          "type": "string",
          "x-go-name": "Owner"
        },
        "resources": {
          "$ref": "#/definitions/Resources"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          },
          "x-go-name": "Volumes"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "NamespacesList": {
      "description": "NamespacesList -- model for namespaces list",
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamespaceWithOwner"
          },
          "x-go-name": "Namespaces"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "Path": {
      "description": "Path -- ingress path",
      "type": "object",
      "required": [
        "path",
        "service_name",
        "service_port"
      ],
      "properties": {
        "path": {
          "type": "string",
          "x-go-name": "Path"
        },
        "service_name": {
          "type": "string",
          "x-go-name": "ServiceName"
        },
        "service_port": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ServicePort"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "Pod": {
      "description": "Pod -- model for pod",
      "type": "object",
      "properties": {
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          },
          "x-go-name": "Containers"
        },
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "deploy": {
          "type": "string",
          "x-go-name": "Deploy"
        },
        "hostname": {
          "type": "string",
          "x-go-name": "Hostname"
        },
        "image_pull_secret": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "ImagePullSecret"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "status": {
          "$ref": "#/definitions/PodStatus"
        },
        "total_cpu": {
          "description": "total CPU usage by all containers in this pod",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "TotalCPU"
        },
        "total_memory": {
          "description": "total RAM usage by all containers in this pod",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "TotalMemory"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "PodStatus": {
      "description": "PodStatus -- kubernetes status of pod",
      "type": "object",
      "properties": {
        "phase": {
          "type": "string",
          "x-go-name": "Phase"
        },
        "restart_count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "RestartCount"
        },
        "start_at": {
          "description": "pod start date in RFC3339 format",
          "type": "string",
          "x-go-name": "StartAt"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "PodWithOwner": {
      "description": "PodWithOwner -- model for pod with owner",
      "type": "object",
      "properties": {
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          },
          "x-go-name": "Containers"
        },
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "deploy": {
          "type": "string",
          "x-go-name": "Deploy"
        },
        "hostname": {
          "type": "string",
          "x-go-name": "Hostname"
        },
        "image_pull_secret": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "ImagePullSecret"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "owner": {
          "type": "string",
          "x-go-name": "Owner"
        },
        "status": {
          "$ref": "#/definitions/PodStatus"
        },
        "total_cpu": {
          "description": "total CPU usage by all containers in this pod",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "TotalCPU"
        },
        "total_memory": {
          "description": "total RAM usage by all containers in this pod",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "TotalMemory"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "PodsList": {
      "description": "PodsList -- model for pods list",
      "type": "object",
      "properties": {
        "pods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodWithOwner"
          },
          "x-go-name": "Pods"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "Port": {
      "description": "Port -- model for endpoint port",
      "type": "object",
      "required": [
        "name",
        "port",
        "protocol"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Port"
        },
        "protocol": {
          "$ref": "#/definitions/Protocol"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "Protocol": {
      "description": "represents port protocol type (TCP or UDP)",
      "type": "string",
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "Resource": {
      "description": "Resource -- represents namespace CPU and RAM",
      "type": "object",
      "required": [
        "cpu",
        "memory"
      ],
      "properties": {
        "cpu": {
          "description": "CPU in m",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "CPU"
        },
        "memory": {
          "description": "RAM in Mi",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Memory"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "Resources": {
      "type": "object",
      "title": "Resources -- represents namespace limits and user resources,",
      "required": [
        "hard"
      ],
      "properties": {
        "hard": {
          "$ref": "#/definitions/Resource"
        },
        "used": {
          "$ref": "#/definitions/Resource"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "Rule": {
      "description": "Rule -- ingress rule",
      "type": "object",
      "required": [
        "host",
        "path"
      ],
      "properties": {
        "host": {
          "type": "string",
          "x-go-name": "Host"
        },
        "path": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Path"
          },
          "x-go-name": "Path"
        },
        "tls_secret": {
          "type": "string",
          "x-go-name": "TLSSecret"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "RunSolutionResponce": {
      "description": "RunSolutionResponce -- responce to run solution request",
      "type": "object",
      "properties": {
        "created": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Created"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Errors"
        },
        "not_created": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "NotCreated"
        }
      },
      "x-go-package": "git.containerum.net/ch/solutions/pkg/models"
    },
    "Secret": {
      "description": "model for secret",
      "type": "object",
      "required": [
        "name",
        "data"
      ],
      "properties": {
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Data"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "SecretWithOwner": {
      "description": "SecretWithOwner -- model for secret with owner",
      "type": "object",
      "required": [
        "name",
        "data",
        "owner"
      ],
      "properties": {
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Data"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "owner": {
          "type": "string",
          "x-go-name": "Owner"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "SecretsList": {
      "description": "SecretsList -- model for secrets list",
      "type": "object",
      "properties": {
        "secrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecretWithOwner"
          },
          "x-go-name": "Secrets"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "SelectedConfigMapsList": {
      "description": "SelectedConfigMapsList -- model for config maps list from all namespaces",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ConfigMapsList"
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "SelectedIngressesList": {
      "description": "SelectedIngressesList -- model for ingresses list from all namespaces",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/IngressesList"
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "Service": {
      "description": "represents service",
      "type": "object",
      "required": [
        "name",
        "ports"
      ],
      "properties": {
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "deploy": {
          "type": "string",
          "x-go-name": "Deploy"
        },
        "domain": {
          "type": "string",
          "x-go-name": "Domain"
        },
        "ips": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "IPs"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServicePort"
          },
          "x-go-name": "Ports"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "ServicePort": {
      "description": "represent service port",
      "type": "object",
      "required": [
        "name",
        "target_port",
        "protocol"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Port"
        },
        "protocol": {
          "$ref": "#/definitions/Protocol"
        },
        "target_port": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TargetPort"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "ServiceType": {
      "description": "represents service type",
      "type": "string",
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "ServiceWithOwner": {
      "description": "ServiceWithOwner -- model for service with owner",
      "type": "object",
      "required": [
        "name",
        "ports",
        "owner"
      ],
      "properties": {
        "created_at": {
          "description": "creation date in RFC3339 format",
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "deploy": {
          "type": "string",
          "x-go-name": "Deploy"
        },
        "domain": {
          "type": "string",
          "x-go-name": "Domain"
        },
        "hidden": {
          "description": "hide service from users",
          "type": "boolean",
          "x-go-name": "Hidden"
        },
        "ips": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "IPs"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "no_selector": {
          "description": "don't add selectors to service (so don't create endpoint)",
          "type": "boolean",
          "x-go-name": "NoSelector"
        },
        "owner": {
          "type": "string",
          "x-go-name": "Owner"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServicePort"
          },
          "x-go-name": "Ports"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "ServicesList": {
      "description": "ServicesList -- model for services list",
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceWithOwner"
          },
          "x-go-name": "Services"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/pkg/model"
    },
    "SolutionEnv": {
      "description": "SolutionEnv -- solution environment variables",
      "type": "object",
      "properties": {
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Env"
        }
      },
      "x-go-package": "git.containerum.net/ch/solutions/pkg/models"
    },
    "SolutionResources": {
      "description": "SolutionResources -- list of solution resources",
      "type": "object",
      "properties": {
        "resources": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          },
          "x-go-name": "Resources"
        }
      },
      "x-go-package": "git.containerum.net/ch/solutions/pkg/models"
    },
    "UpdateImage": {
      "description": "UpdateImage -- model for update container image request",
      "type": "object",
      "required": [
        "container_name",
        "image"
      ],
      "properties": {
        "container_name": {
          "type": "string",
          "x-go-name": "Container"
        },
        "image": {
          "type": "string",
          "x-go-name": "Image"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "UpdateNamespaceName": {
      "description": "UpdateNamespaceName -- contains new namespace label",
      "type": "object",
      "required": [
        "label"
      ],
      "properties": {
        "label": {
          "type": "string",
          "x-go-name": "Label"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "UpdateReplicas": {
      "description": "UpdateReplicas -- contains new number of replicas",
      "type": "object",
      "required": [
        "replicas"
      ],
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Replicas"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "UserHeaderData": {
      "description": "represents header data for X-User-Namespace and X-User-Volume headers (encoded in base64)",
      "type": "object",
      "required": [
        "id",
        "label",
        "access"
      ],
      "properties": {
        "access": {
          "description": "one of: \"owner\", \"read\", \"write\", \"read-delete\", \"none\"",
          "type": "string",
          "x-go-name": "Access"
        },
        "id": {
          "description": "hosting-internal name",
          "type": "string",
          "x-go-name": "ID"
        },
        "label": {
          "description": "user-visible label for the object",
          "type": "string",
          "x-go-name": "Label"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    },
    "UserSolution": {
      "description": "UserSolution -- running solution",
      "type": "object",
      "required": [
        "template",
        "name",
        "namespace"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "x-go-name": "Branch"
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Env"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "type": "string",
          "x-go-name": "Namespace"
        },
        "template": {
          "type": "string",
          "x-go-name": "Template"
        }
      },
      "x-go-package": "git.containerum.net/ch/solutions/pkg/models"
    },
    "UserSolutionsList": {
      "description": "UserSolutionsList -- list of running solution",
      "type": "object",
      "properties": {
        "solutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserSolution"
          },
          "x-go-name": "Solutions"
        }
      },
      "x-go-package": "git.containerum.net/ch/solutions/pkg/models"
    },
    "Volume": {
      "description": "Volume -- volume representation\nprovided by resource-service\nhttps://ch.pages.containerum.net/api-docs/modules/resource-service/index.html#get-namespace",
      "type": "object",
      "properties": {
        "access": {
          "type": "string",
          "x-go-name": "Access"
        },
        "access_change_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "AccessChangeTime"
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreateTime"
        },
        "label": {
          "type": "string",
          "x-go-name": "Label"
        },
        "replicas": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Replicas"
        },
        "storage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Storage"
        }
      },
      "x-go-package": "git.containerum.net/ch/kube-api/vendor/github.com/containerum/kube-client/pkg/model"
    }
  },
  "parameters": {
    "UserIDHeader": {
      "$ref": "vendor/github.com/containerum/utils/httputil/swagger.json#/parameters/UserIDHeader"
    },
    "UserRoleHeader": {
      "$ref": "vendor/github.com/containerum/utils/httputil/swagger.json#/parameters/UserRoleHeader"
    }
  },
  "responses": {
    "error": {
      "description": "cherry error",
      "schema": {
        "$ref": "vendor/github.com/containerum/cherry/swagger.json#/definitions/Err"
      }
    }
  }
}